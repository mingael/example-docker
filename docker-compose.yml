version: "3"
services:
  db:
    container_name: exam-mysql
    image: mysql:5.7
    platform: linux/x86_64
    volumes:
      - "${MYSQL_HOME_DIR}/data:/var/lib/mysql:rw"
      - "${MYSQL_HOME_DIR}/init:/docker-entrypoint-initdb.d/"
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    restart: always
    logging:
      options:
        max-size: "1m"
        max-file: "1"
  spring:
    container_name: exam-spring
    image: openjdk:17-jdk-slim
    volumes:
      - "./spring-folder/${SPRING_PROJECT}:/spring"
    working_dir: /spring
    command: ["java", "-jar", "./build/libs/${SPRING_PROJECT}-0.0.1-SNAPSHOT.war"]
    ports:
      - "8020:8020"
    depends_on:
      - db
    links:
      - db
    restart: always
    logging:
      options:
        max-size: "1m"
        max-file: "3"
  aws:
    container_name: exam-aws
    image: localstack/localstack
    platform: linux/amd64
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
    environment:
      - SERVICE=dynamodb       # 사용할 서비스
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      # 내부에서 aws 커맨드 사용하기 위해 설정. awslocal 사용 시 미지정
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - AWS_DEFAULT_REGION=ap-northeast-2
    volumes:
      - "./localstack/data:/var/lib/localstack"
      - "./localstack/init/ready.d:/etc/localstack/init/ready.d"
    restart: unless-stopped
networks:
  default:
    external:
      name: example